version: "3"

services:
  user-service:
    container_name: user-service-container
    build:
      context: ./user-service
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
    ports:
      - "5000:5000"
    networks:
      - app-network
    depends_on:
      - mongodb
    
  file-upload-service:
    container_name: file-upload-container
    build:
      context: ./file-upload-service
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
    ports:
      - "5001:5001"
    networks:
      - app-network
    volumes:
      - file-upload-volume:/file-upload-server/uploads
    depends_on:
      - mongodb      

  post-service:
    container_name: post-container
    build:
      context: ./post-service
      dockerfile: Dockerfile
    ports:
      - "5002:5002"
    environment:
      - NODE_ENV=production
    networks:
      - app-network
    depends_on:
      - mongodb     



  pet-service:
    container_name: pet-container
    build:
      context: ./pet-service
      dockerfile: Dockerfile
    ports:
      - "5003:5003"
    environment:
      - NODE_ENV=production
    networks:
      - app-network
    depends_on:
      - mongodb     

  react-nginx-app:
    container_name: react-nginx-app
    build:
      context: ./frontend/
      dockerfile: Dockerfile
    ports:
      - "443:80"
    networks:
      - app-network
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf

  mongodb:
    container_name: mongo_database
    image: mongo
    ports:
      - "30000:27017"
    networks:
      - app-network
    volumes:
      - mongo-db-volume:/data/db


networks:
  app-network:
    driver: bridge

volumes:
  mongo-db-volume:
    driver: local
  file-upload-volume:
    driver: local
